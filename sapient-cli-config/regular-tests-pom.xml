<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>mockito-demo-public</groupId>
    <artifactId>sapient-cli-config</artifactId>
    <version>1.0</version>
    <packaging>pom</packaging>

    <properties>
        <file.path>${project.basedir}/.sapient/cli_config.txt</file.path>
        <key.projectRoot>projectRoot</key.projectRoot>
        <value.projectRoot>${project.basedir}</value.projectRoot>
        <key.moduleName>moduleName</key.moduleName>
        <value.moduleName/>
        <key.testingFramework>testingFramework</key.testingFramework>
        <value.testingFramework>JUnit5</value.testingFramework>
        <key.testingFrameworkVersion>testingFrameworkVersion</key.testingFrameworkVersion>
        <value.testingFrameworkVersion>5.10.2</value.testingFrameworkVersion>
        <key.testJavaSrcDir>testJavaSrcDir</key.testJavaSrcDir>
        <value.testJavaSrcDir>${project.build.testSourceDirectory}</value.testJavaSrcDir>
        <key.sapientCliStatus>sapientCliStatus</key.sapientCliStatus>
        <value.generate>SAPIENT_TEST_GENERATION</value.generate>
        <key.testResourceDir>testResourceDir</key.testResourceDir>
        <value.testResourceDir>${project.build.testResources[0].directory}</value.testResourceDir>
        <value.compile>SAPIENT_TEST_COMPILATION</value.compile>
        <value.execute>SAPIENT_TEST_EXECUTION</value.execute>
        <file.sapientDir>${project.basedir}/.sapient</file.sapientDir>
        <file.compileClasspath>${file.sapientDir}/SAPIENT_COMPILE_CLASSPATH.txt</file.compileClasspath>
        <file.testClasspath>${file.sapientDir}/SAPIENT_TEST_CLASSPATH.txt</file.testClasspath>
        <file.executeClasspath>${file.sapientDir}/SAPIENT_EXECUTE_CLASSPATH.txt</file.executeClasspath>
        <file.summaryResult>${project.build.directory}/summary_result.txt</file.summaryResult>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.4.0</version>
                <executions>
                    <execution>
                        <id>build-compile-classpath</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                            <outputFile>${file.compileClasspath}</outputFile>
                            <scope>compile</scope>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-test-classpath</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                            <outputFile>${file.testClasspath}</outputFile>
                            <scope>test</scope>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-runtime-classpath</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                            <outputFile>${file.executeClasspath}</outputFile>
                            <scope>runtime</scope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>sapient-cli-1-create-cli-config-maven</id>
                        <phase>process-test-sources</phase>
                        <configuration>
                            <target>
                                <delete file="${file.path}" failonerror="false"/>
                                <echo file="${file.path}">
                                    ${key.projectRoot}=${value.projectRoot}
                                    ${key.moduleName}=${value.moduleName}
                                    ${key.testingFramework}=${value.testingFramework}
                                    ${key.testingFrameworkVersion}=${value.testingFrameworkVersion}
                                    ${key.testJavaSrcDir}=${value.testJavaSrcDir}
                                    sourceBranch=master
                                    targetBranch=master
                                    runTestForAllClasses=true
                                    ${key.sapientCliStatus}=${value.generate}
                                </echo>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>append-custom-paths</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>sh</executable>
                            <arguments>
                                <!-- Appending the two paths using path and file separators -->
                                <argument>-c</argument>
                                <argument>
                                    echo '${path.separator}${project.basedir}${file.separator}target${file.separator}classes${path.separator}${project.basedir}${file.separator}target${file.separator}test-classes${path.separator}${project.basedir}${file.separator}.sapient${file.separator}cli${path.separator}${project.basedir}${file.separator}src${file.separator}test' >> ${file.executeClasspath}
                                </argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>append-custom-paths-compile</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>sh</executable>
                            <arguments>
                                <!-- Appending the two paths using path and file separators -->
                                <argument>-c</argument>
                                <argument>
                                    echo '${path.separator}${project.basedir}${file.separator}target${file.separator}classes${path.separator}${project.basedir}${file.separator}target${file.separator}test-classes' >> ${file.compileClasspath}
                                </argument>
                            </arguments>
                        </configuration>
                    </execution>


                    <execution>
                        <id>sapient-cli-2-generate-tests</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <classpathScope>compile</classpathScope>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath />
                                <argument>ai/sapient/unit/SapientCLITestGeneratorMaven</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>sapient-cli-3-compile-tests</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <classpathScope>compile</classpathScope>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath />
                                <argument>ai.sapient.unit.SapientCLICompileMaven</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>sapient-cli-4-execute-tests</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <classpathScope>compile</classpathScope>
                            <classpathScope>test</classpathScope>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath />
                                <argument>ai.sapient.unit.SapientCLIExecutorMaven</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>environment.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco.exec</destFile>
                            <propertyName>jacocoArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>add-test-source</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/.sapient/cliCodelessTests</source>
                                <source>${project.basedir}/src/test/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${project.basedir}/src/test/java</additionalClasspathElement>
                    </additionalClasspathElements>
                    <testSourceDirectory>${project.build.testSourceDirectory}</testSourceDirectory>
                    <testFailureIgnore>true</testFailureIgnore>
                    <argLine>${jacocoArgLine}</argLine>
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>

    <profiles>
        <profile>
            <id>STRICT_QA</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                                <id>sapient-cli-5-check-summary-result</id>
                                <phase>process-test-sources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>sh</executable>
                                    <arguments>
                                        <argument>-c</argument>
                                        <argument>
                                            grep 'Total lines covered' ${file.summaryResult} | awk '{print $8}' | sed 's/%//' | awk '{if ($1 &lt; 90) {print "Build failed: required code coverage (90%) was not achieved"; exit 1; }}'
                                        </argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


    <dependencies>
        <dependency>
            <groupId>ai.sapient.unit</groupId>
            <artifactId>sapient-cli</artifactId>
            <version>LATEST</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/sapient-cli-LATEST.jar</systemPath>
        </dependency>
    </dependencies>
</project>
